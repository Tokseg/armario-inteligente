# Configuração específica para ambiente Docker (sobrescreve application.properties).
# Em produção, sobrescreva as variáveis de ambiente (ex: DB_USER, DB_PASS, JWT_SECRET) para dados sensíveis.

# Configuração do banco de dados (Docker) (usando variáveis de ambiente com valores padrão)
spring.datasource.url=jdbc:postgresql://db:5432/armario
spring.datasource.username=${DB_USER:armario}
spring.datasource.password=${DB_PASS:armario}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate

# Configuração do Flyway (para migrações de banco de dados)
spring.flyway.url=jdbc:postgresql://db:5432/armario
spring.flyway.user=${DB_USER:armario}
spring.flyway.password=${DB_PASS:armario}
spring.flyway.clean-disabled=false
spring.flyway.clean-on-validation-error=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=public
spring.flyway.validate-on-migrate=true
spring.flyway.ignore-migration-patterns=*:missing,*:future
spring.flyway.mixed=true

# Configurações adicionais para Docker (sobrescrevem as de application.properties)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configurações de servidor (para expor a aplicação em 0.0.0.0:8080)
server.port=8080
server.address=0.0.0.0

# Configuração JWT (segredo e expiração) (sobrescreve o valor de application.properties)
jwt.secret=${JWT_SECRET:segredoDocker}

# Configurações de logging (sobrescrevem as de application.properties)
logging.level.root=INFO
logging.level.br.com.unit.tokseg=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n 